{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/product/[handle]",
      "regex": "^/product/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPhandle": "nxtPhandle"
      },
      "namedRegex": "^/product/(?<nxtPhandle>[^/]+?)(?:/)?$"
    },
    {
      "page": "/shows/[slug]",
      "regex": "^/shows/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/shows/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/affiliate",
      "regex": "^/affiliate(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/affiliate(?:/)?$"
    },
    {
      "page": "/care",
      "regex": "^/care(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/care(?:/)?$"
    },
    {
      "page": "/community",
      "regex": "^/community(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/community(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/debug",
      "regex": "^/debug(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug(?:/)?$"
    },
    {
      "page": "/membership",
      "regex": "^/membership(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/membership(?:/)?$"
    },
    {
      "page": "/payout",
      "regex": "^/payout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payout(?:/)?$"
    },
    {
      "page": "/radio",
      "regex": "^/radio(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/radio(?:/)?$"
    },
    {
      "page": "/records",
      "regex": "^/records(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/records(?:/)?$"
    },
    {
      "page": "/shop",
      "regex": "^/shop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shop(?:/)?$"
    },
    {
      "page": "/shows",
      "regex": "^/shows(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shows(?:/)?$"
    },
    {
      "page": "/xxx",
      "regex": "^/xxx(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/xxx(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}